<Window x:Class="e3tools.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:e3tools"
        Title="E3 Tools" Height="720" Width="1280"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        FontFamily="Roboto"
        FontSize="14">
    <Window.Resources>
        <local:StatusToColorBrushConverter x:Key="StatusToColorBrushConverter"/>
        <local:HighLightedBrushIndexToColorBrushConverter x:Key="HighLightedBrushIndexToColorBrushConverter"/>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="FontFamily" Value="Roboto" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <DataTemplate x:Key="LoggerHeader">
            <StackPanel Orientation="Horizontal" Background="{Binding Converter={StaticResource HighLightedBrushIndexToColorBrushConverter}}" Margin="-5">
                <TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center" Margin="5,0,5,0" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="LoggerHeaderFocused">
            <StackPanel Orientation="Horizontal" Background="{Binding Converter={StaticResource HighLightedBrushIndexToColorBrushConverter}}" Margin="-5">
                <TextBlock Text="{Binding Path=Name}" FontWeight="Bold" VerticalAlignment="Center" Margin="5,0,5,0"/>
                <Button Tag="{Binding}" Click="BtnCloseLoggerItem_Click" BorderThickness="0" BorderBrush="Transparent" Background="Transparent">
                    <Image Source="resources/delete_flat.png" Width="15" Height="15"></Image>
                </Button>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="StbLoggerTabItemStyle" TargetType="{x:Type TabItem}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True" >
                    <Setter Property="HeaderTemplate" Value="{StaticResource LoggerHeaderFocused}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="False" >
                    <Setter Property="HeaderTemplate" Value="{StaticResource LoggerHeader}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Paragraph}">
            <Setter Property="Margin" Value="0"/>
        </Style>
        
        <Style x:Key="RichTextBoxLogStyle" TargetType="{x:Type RichTextBox}">
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="FontFamily" Value="Courier New"/>
        </Style>
        <Style x:Key="RichTextBoxLogStyleServer" TargetType="{x:Type RichTextBox}">
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="LightGreen"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="FontFamily" Value="Courier New"/>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="Padding" Value="2.5,0,2.5,0"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
        </Style>

        <ContextMenu x:Key="stbContextMenu">
            <MenuItem Command="Copy" />
            <MenuItem Command="Delete" />
            <MenuItem Command="Properties" />
            <Separator />
            <MenuItem Header="High Light">
                <MenuItem Header="Red" Background="Red" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="0" ></MenuItem>
                <MenuItem Header="Orange" Background="Orange" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="1" ></MenuItem>
                <MenuItem Header="Yellow" Background="Yellow" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="2"></MenuItem>
                <MenuItem Header="Green" Background="LightGreen" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="3" ></MenuItem>
                <MenuItem Header="Cyan" Background="Cyan" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="4" ></MenuItem>
                <MenuItem Header="LightBlue" Background="LightBlue" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="5" ></MenuItem>
                <MenuItem Header="Magenta" Background="Magenta" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="6" ></MenuItem>
                <Separator />
                <MenuItem Header="Clear" Command="{x:Static local:MainWindow.HighLightItems}" CommandParameter="-1"></MenuItem>
            </MenuItem>
        </ContextMenu>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,0,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>            
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
        </Grid.RowDefinitions>
        
        <!-- MENU -->
        <StackPanel Orientation="Horizontal" Background="LightBlue">
            <Menu Background="Transparent">
                <MenuItem Header="File" VerticalAlignment="Center">
                    <MenuItem Header="Import..." Name="MnuImportFromFile" Click="MnuImportFromFile_Click"></MenuItem>
                    <MenuItem Header="Export..." Name="MnuExportToFile" Click="MnuExportToFile_Click"></MenuItem>
                    <Separator />
                    <MenuItem Header="Settings..." Name="MnuSettings" Click="MnuSettings_Click"></MenuItem>
                    <Separator/>
                    <MenuItem Header="Exit" Name="MnuExit" Click="MnuExit_Click"></MenuItem>
                </MenuItem>
                <MenuItem Header="Hospital" VerticalAlignment="Center" Name="MnuServer">
                    <MenuItem Header="Add..." Command="{x:Static local:MainWindow.CmdHospitalAdd}"></MenuItem>
                    <MenuItem Header="Edit..." Command="{x:Static local:MainWindow.CmdHospitalEdit}"></MenuItem>
                    <MenuItem Header="Detete..." Command="{x:Static local:MainWindow.CmdHospitalDelete}"></MenuItem>
                    <MenuItem Header="Refresh Devices..." Command="{x:Static local:MainWindow.CmdRefreshStbs}"></MenuItem>
                    <Separator/>
                    <MenuItem Name="MnuHospitalListView" Header="Show Table View..." Command="{x:Static local:MainWindow.CmdListHospitals}"></MenuItem>
                    <MenuItem Name="MnuHospitalsInfo" Header="Info..." Command="{x:Static local:MainWindow.CmdHospitalsInfo}"></MenuItem>
                    
                    <Separator/>
                    <MenuItem Header="Connect..." Name="MnuServerConnect" Command="{x:Static local:MainWindow.CmdHospitalConnect}"></MenuItem>
                    <MenuItem Header="Close All Stb Logs..." Command="{x:Static local:MainWindow.CmdCloseAllLogs}"></MenuItem>
                </MenuItem>
                
                <ComboBox Name="CboServers" MinWidth="150" Margin="-5,0,-5,0" BorderThickness="0" BorderBrush="Transparent" SelectionChanged="CboServers_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="2" Text="{Binding Name}"/>
                                <TextBlock Margin="2" Text="{Binding Ip}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border Name="templateBorder" Padding="2" SnapsToDevicePixels="true">
                                            <ContentPresenter>
                                                <ContentPresenter.Content>
                                                    <Border BorderThickness="0,0,0,1" BorderBrush="Gray">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="{Binding IconUrl}" Width="100" Height="50" Margin="5" Stretch="Uniform" />
                                                            <StackPanel>
                                                                <TextBlock VerticalAlignment="Center" Margin="2.5" Text="{Binding Name}"/>
                                                                <TextBlock VerticalAlignment="Center" Margin="2.5" Text="{Binding Ip}"/>
                                                                <TextBlock VerticalAlignment="Center" Margin="2.5" Text="{Binding Versions}"/>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Border>
                                                </ContentPresenter.Content>
                                            </ContentPresenter>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsHighlighted" Value="True">
                                                <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}"/>
                                                <Setter TargetName="templateBorder" Property="Background" Value="{x:Static SystemColors.HighlightBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>                    
                </ComboBox>
                
                <MenuItem Header="TV/STB" VerticalAlignment="Center" Name="MnuTvStb" SubmenuOpened="MnuTvStb_SubmenuOpened">
                    <MenuItem Header="Add..." Command="{x:Static local:MainWindow.AddStb}"></MenuItem>
                    <MenuItem Header="Edit/Properties..." Command="{x:Static ApplicationCommands.Properties}"></MenuItem>
                    <MenuItem Header="Delete..." Command="{x:Static ApplicationCommands.Delete}"></MenuItem>
                    <MenuItem Header="Delete All..." Command="{x:Static local:MainWindow.DeleteAll}"></MenuItem>
                    <MenuItem Header="Find..." Command="{x:Static ApplicationCommands.Find}"></MenuItem>
                    <Separator/>
                    <MenuItem Header="View Log" Name="MnuStbViewLog" Command="{x:Static local:MainWindow.CmdStbViewLog}"></MenuItem>
                    <MenuItem Header="System Info..." Command="{x:Static local:MainWindow.CmdStbViewInfo}"></MenuItem>
                    <MenuItem Header="Register..." Command="{x:Static local:MainWindow.CmdStbRegister}"></MenuItem>
                    <MenuItem Header="Data..." Command="{x:Static local:MainWindow.CmdStbData}"></MenuItem>
                    <Separator/>
                    <MenuItem Header="CPU Log" Name="MnuStbViewCPUPTCLog">
                        <MenuItem Header="Enable CPU Log" Name="MnuStbEnableDisableCPULog" Click="MnuStbEnableDisableCPULog_Click"></MenuItem>
                        <MenuItem Header="Start View CPU Log" Name="MnuStbViewCPULog" Click="MnuStbViewCPUPTCLog_Click"></MenuItem>
                    </MenuItem>
                </MenuItem>
                
                <MenuItem Header="Tools" VerticalAlignment="Center">
                    <MenuItem Header="Create Offline Zip..." Command="{x:Static local:MainWindow.CmdCreateZipLoader}" />
                </MenuItem>
                
                <MenuItem Header="Help" VerticalAlignment="Center">
                    <MenuItem Header="About..." Click="MnuHelpAbout_Click" />
                    <MenuItem Header="Debug..." Click="MnuDebug_Click" />
                    <MenuItem Header="Update..." Command="{x:Static local:MainWindow.CmdCheckSoftwareUpdate}" />
                </MenuItem>
            </Menu>
        </StackPanel>

        <Button Name="BtnRemoteControl" HorizontalAlignment="Right" Command="{x:Static local:MainWindow.CmdShowHideRemoteControl}" Padding="5,0,5,0">Remote Control</Button>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ListView Name="LvStbs" Margin="5"
                          SelectionChanged="LstStbs_SelectionChanged"
                          FontFamily="Courier New"
                          GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler"
                      ContextMenu="{StaticResource stbContextMenu}">
                <ListView.Background>
                    <LinearGradientBrush EndPoint="0.939,0.919" StartPoint="0.061,0.081">
                        <GradientStop Color="#00FFE07E" Offset="0"/>
                        <GradientStop Color="#FFFFFAEA" Offset="1"/>
                    </LinearGradientBrush>
                </ListView.Background>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" >
                        <Style.Setters>
                            <Setter Property="Foreground" Value="{Binding Converter={StaticResource StatusToColorBrushConverter}}" />
                            <Setter Property="Background" Value="{Binding Converter={StaticResource HighLightedBrushIndexToColorBrushConverter}}" />
                        </Style.Setters>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="DarkBlue" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFE07E" Offset="0"/>
                                            <GradientStop Color="#FFFFFAEA" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="BorderThickness" Value="3" />
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="Background" Value="{Binding Converter={StaticResource HighLightedBrushIndexToColorBrushConverter}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <!--<ListView.View>
                    <GridView x:Name="GrdStbs">
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status}" />
                        <GridViewColumn Header="MacId" DisplayMemberBinding="{Binding MacId}" />
                        <GridViewColumn Header="IP" DisplayMemberBinding="{Binding Ip}" />
                        <GridViewColumn Header="Patient" DisplayMemberBinding="{Binding InstalledStb.patientAccountId}" />
                        <GridViewColumn Header="Nursing Unit" DisplayMemberBinding="{Binding InstalledStb.nursingUnit}" />
                        <GridViewColumn Header="LastBeat" DisplayMemberBinding="{Binding InstalledStb.lastBeat}" />
                        <GridViewColumn Header="Idle (dd hh:mm:ss)" DisplayMemberBinding="{Binding Idletime}" />
                        <GridViewColumn Header="Uptime (dd hh:mm)" DisplayMemberBinding="{Binding Uptime}" />
                        <GridViewColumn Header="Client Version" DisplayMemberBinding="{Binding InstalledStb.clientVersion}" />
                        <GridViewColumn Header="Firmware Version" DisplayMemberBinding="{Binding InstalledStb.hwFirmwareVersion}" />
                        <GridViewColumn Header="Firmware Subversion" DisplayMemberBinding="{Binding InstalledStb.hwFirmwareSubversion}" />
                        <GridViewColumn Header="SerialNumber" DisplayMemberBinding="{Binding InstalledStb.hwSerialNumber}" />
                        <GridViewColumn Header="Model" DisplayMemberBinding="{Binding InstalledStb.hwModel}" />
                        <GridViewColumn Header="Manufacturer" DisplayMemberBinding="{Binding InstalledStb.hwManufacturer}" />
                        <GridViewColumn Header="e3ConfigVersion" DisplayMemberBinding="{Binding InstalledStb.e3ConfigVersion}" />
                        <GridViewColumn Header="e3OfflineVersion" DisplayMemberBinding="{Binding InstalledStb.e3OfflineVersion}" />
                        <GridViewColumn Header="e3CCServer" DisplayMemberBinding="{Binding InstalledStb.e3CCServer}" />
                        <GridViewColumn Header="e3AppUrl" DisplayMemberBinding="{Binding InstalledStb.e3AppUrl}" />
                        <GridViewColumn Header="e3LauncherUrl" DisplayMemberBinding="{Binding InstalledStb.e3LauncherUrl}" />
                    </GridView>
                </ListView.View>-->
            </ListView>
            <ListView Name="LvHospitals" Margin="5" Visibility="Collapsed"
                          FontFamily="Courier New"
                          GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler">
                <ListView.Background>
                    <LinearGradientBrush EndPoint="0.939,0.919" StartPoint="0.061,0.081">
                        <GradientStop Color="#00AAE0FF" Offset="1"/>
                        <GradientStop Color="#FF99FAAA" Offset="0"/>
                    </LinearGradientBrush>
                </ListView.Background>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Hospital/Server Name" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="IP" DisplayMemberBinding="{Binding Ip}" />
                        <GridViewColumn Header="Logs Path" DisplayMemberBinding="{Binding LogsPath}" />
                        <GridViewColumn Header="Client Versions" DisplayMemberBinding="{Binding Versions}" />
                        <GridViewColumn Header="Deployed Offlines" DisplayMemberBinding="{Binding Offlines}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,5,-1.25,0" Width="2.5" Background="LightBlue" />
            <xctk:PropertyGrid Margin="5" Visibility="Collapsed" MinWidth="200" Grid.Column="1" Name="ProgGridStb" AutoGenerateProperties="True" ShowSortOptions="False" ShowAdvancedOptions="False" ShowSearchBox="False" ShowSummary="False" SelectedObject="{Binding}" />
        </Grid>
        
        <GridSplitter HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Top" Height="2.5" Background="LightBlue" />
        
        <!-- LOGS -->
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TabControl Name="TcLogTabs" Margin="5" SelectionChanged="TcLogTabs_SelectionChanged">
                <TabItem Name="TabItemRemoteStatus" Header="Remote Status">
                    <RichTextBox MinHeight="100" Name="TxtConsole" Style="{DynamicResource RichTextBoxLogStyleServer}" Background="Black" Foreground="White" />                    
                </TabItem>
            </TabControl>
            <Grid Grid.Row="1" Margin="5,0,5,5">
                <Grid.ColumnDefinitions>                    
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBox Name="TxtSearch" MinWidth="150" />
                    <Button Name="BtnSearch" Style="{DynamicResource ButtonStyle}" Click="BtnSearch_Click">Find</Button>
                    <Button Name="BtnFilter" Style="{DynamicResource ButtonStyle}" Click="BtnFilter_Click">Filter</Button>
                    <Button Name="BtnClearLog" Style="{DynamicResource ButtonStyle}" Click="BtnClearLog_Click">Clear</Button>
                    <CheckBox Name="ChkPauseLog" Margin="5,0,0,0" VerticalAlignment="Center">Pause</CheckBox>
                    <Button Name="BtnClearLogonServer" Style="{DynamicResource ButtonStyle}" Click="BtnClearLogOnServer_Click">Clear Log On Server</Button>
                </StackPanel>
                <TextBlock Name="TxtStatus" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" TextAlignment="Center" />
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <Button Name="BtnOpenLogFile" Command="{x:Static local:MainWindow.CmdOpenRemoteFile}">Download Remote File...</Button>                    
                    <TextBlock Text="Max Lines:" Margin="5,0,0,0" VerticalAlignment="Center"/>
                    <TextBox Name="TxtMaxLines" Margin="5,0,0,0" MinWidth="50" Text="1000" TextAlignment="Center" TextChanged="TxtMaxLines_TextChanged" />
                </StackPanel>
                <CheckBox Name="ChkScroll" Margin="5,0,0,0" VerticalAlignment="Center" IsChecked="True" Grid.Column="3">Auto Scroll</CheckBox>
                <Button Name="BtnZoomOut" Margin="5,0,0,0" Width="22" VerticalAlignment="Center" Grid.Column="4">-</Button>
                <Button Name="BtnZoomIn" Margin="0" Width="22" VerticalAlignment="Center" Grid.Column="5">+</Button>
            </Grid>
        </Grid>

        <!-- REMOTE CONTROL -->
        <Grid Grid.RowSpan="2" Name="PnlRemoteControl" Visibility="Collapsed" Width="200" Height="420" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Right">
            <Border Name="BdrRemoteControl" Background="LightBlue">
                <TabControl Margin="5" TabStripPlacement="Bottom">
                    <TabItem Header="Basic">
                        <UniformGrid Columns="3">
                            <Button Foreground="OrangeRed" Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="boot">BOOT</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="power" Background="Green" Foreground="White">POWER</Button>
                            <Button Foreground="OrangeRed" Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="pdown">SHUTDOWN</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="menu">MENU</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="up" Background="Purple" Foreground="White">UP</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="back">BACK</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="left" Background="Purple" Foreground="White">LEFT</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="enter" Background="Purple" Foreground="White">OK</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="right" Background="Purple" Foreground="White">RIGHT</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="tv">TV</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="down" Background="Purple" Foreground="White">DOWN</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="info">INFO</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="ch+" Background="DarkBlue" Foreground="White">CH+</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="mute" Background="DarkBlue" Foreground="White">MUTE</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="vol+" Background="DarkBlue" Foreground="White">VOL+</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="ch-" Background="DarkBlue" Foreground="White">CH-</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="cc" Background="DarkBlue" Foreground="White">CC</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="vol-" Background="DarkBlue" Foreground="White">VOL-</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_1" Background="Yellow">1</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_2" Background="Yellow">2</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_3" Background="Yellow">3</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_4" Background="Yellow">4</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_5" Background="Yellow">5</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_6" Background="Yellow">6</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_7" Background="Yellow">7</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_8" Background="Yellow">8</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_9" Background="Yellow">9</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="pon">P-ON</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="digit_0" Background="Yellow">0</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="poff">P-OFF</Button>
                        </UniformGrid>
                    </TabItem>
                    <TabItem Header="Smart">
                        <UniformGrid Columns="1">
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="status" Padding="3">Refresh Status...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="restart" Padding="3" Foreground="Orange">Restart E3</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="reboot" Padding="3" Foreground="Red">Reboot TV</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="url" Padding="3" Foreground="Red">Set Launcher URL...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="reinstall_e3" Padding="3" Foreground="Orange">Reinstall E3...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="beurl" Padding="3" Foreground="Red">Set Backend URL...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="urlx" Padding="3">Check URL...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="update_firmware" Padding="3" Foreground="Red">Update Firmware...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="popup" Padding="3">Display MyInbox Test</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="alert" Padding="3">Display Alert Test...</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="verify_videos" Padding="3">Verify Video Onsite...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="verify_tvchannels" Padding="3">Verify TV Channels...</Button>

                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="vnc" Padding="3">VNC</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="log" Padding="3">Change Log Config...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="get_local_log" Padding="3">Get Log Data...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="send_tv_msg" Padding="3">Send TV Message...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="send_key" Padding="3">Send Key...</Button>
                            <Button Command="{x:Static local:MainWindow.CmdStbRemote}" CommandParameter="clearcache" Padding="3" Foreground="Red">Clear Cache...</Button>
                        </UniformGrid>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
    </Grid>
</Window>
